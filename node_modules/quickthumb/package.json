{
  "name": "quickthumb",
  "version": "0.0.9",
  "description": "On the fly, thumbnail creation middleware for express.",
  "author": {
    "name": "Zach Ivester",
    "email": "zivester@gmail.com"
  },
  "main": "index.js",
  "scripts": {
    "test": "node test/simple-test.js",
    "start": "node test/express-test.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/zivester/node-quickthumb.git"
  },
  "bugs": {
    "url": "https://github.com/zivester/node-quickthumb/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/zivester/node-quickthumb/raw/master/LICENSE"
    }
  ],
  "keywords": [
    "thumb",
    "thumbnail",
    "image",
    "imagemagick",
    "timthumb",
    "timthumb.php",
    "resize"
  ],
  "dependencies": {
    "imagemagick": "git://github.com/rsms/node-imagemagick.git",
    "mkdirp": "~0.3.3"
  },
  "readme": "# QuickThumb\n\nQuickThumb is an on the fly, thumbnail creation middleware for express.  It utilizes the popular *nix image library, ImageMagick.  It allows for the automatic creation of thumbnails by adding query parameters onto a standard image url.  It's ideal for web developers who would like to easily experiment with different size thumbnails, wihout having to worry about pre-generating an entire library.\n\nQuickThumb also comes with a command line utility to batch create thumbnails.  This is more appropriate for production systems where all images should be pre-generated.\n\n## Examples\n\n```js\nvar express = require('express'),\n    app = express(),\n    qt = require('quickthumb');\n\napp.configure(function(){\n    app.use('/public', qt.static(__dirname + '/../public'));\n});\n```\n\n```html\n<img src=\"/public/images/red.gif?dim=200x100\" />\n```\n\n## Install\n\n    npm install quickthumb\n\nImageMagick is required for this module, so make sure it is installed.\n\nUbuntu\n\n    apt-get install imagemagick\n\nMac OS X\n\n    brew install imagemagick\n\nFedora/CentOS\n\n    yum install imagemagick\n\n\n## Documentation\n\n### qt.static(path, [options])\n\nMiddleware to replace `express.static()` or `connect.static()`.\n\n`path` is the base directory where images are located.\n\n`options` is an object to specify customizations. It currently has the following options:\n\n* `type` The type of imagemagick conversion to take place.  There are currently only two options:\n  * `crop` (default) Crops and zooms images to the exact size specified. Proxy to *imagemagick.crop*.\n  * `resize` Resizes an image to fit within the specified dimensions, but actual dimensions may not be exactly as specified. Proxy to *imagemagick.resize*.\n* `cacheDir` The directory where generated images will be created.  If not supplied, images will be created in `[path]/.cache/`\n\nResizing of images is directed by the query parameter `dim`.  This is in the format [width]x[height]. E.g. `red.gif?dim=200x100`\n\nResized images will be created on an as needed basis, and stored in `[cacheDir]/[type]/[dim]`.\n\nIf the `dim` parameter is not present, the original image will be served.\n\n### qt.convert(options, callback)\n\nThe first argument is an options object. `src`, `dst`, and at least one of `width` and `height` are required\n\n* `src` (required) Path to source image\n* `dst` (required) Path to destination image\n* `width` Width of resized image\n* `height` Height of resized image\n\nThe callback argument gets 2 arguments. The first is an error object, most likely from imagemagick's *convert*.  The second argument is the path to the created image.\n\n\n## CLI utils\n\n```js\nnode bin/make-thumb.js src dst [width]x[height] [-p] [-r] [--resize]\n```\n\n* `src` Path to the source image or directory\n* `dst` Path to the destination image or directory\n* `[width]x[height]` Dimensions of the resized images\n* `-p` Create a subdirectory in `dst` based off of the dimensions\n* `-r` Process images recursively from `src`\n* `--resize` Use *resize* instead of *crop*\n\n__Example__\n\n```js\n// Resize a single image and write it to /tmp/red.gif\nnode bin/make-thumb.js public/images/red.gif /tmp/ 200x200\n// Resize all images recursively from public/images/* and write them to /tmp/200x200/*\nnode bin/make-thumb.js public/images/ /tmp/ 200x200 -p -r\n```\n\n",
  "readmeFilename": "README.md",
  "_id": "quickthumb@0.0.9",
  "dist": {
    "shasum": "bc8b92ccd3a1c915fdbd875f5a60cf5cb08f36ab"
  },
  "_from": "quickthumb@",
  "_resolved": "https://registry.npmjs.org/quickthumb/-/quickthumb-0.0.9.tgz"
}
