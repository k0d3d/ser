var app=angular.module("stocUser",["ngRoute","ui.bootstrap","services","directives","user","organization","drug","order","language","facility","ngTagsInput","ngDragDrop","xeditable","checklist-model"]);app.run(function(editableOptions){editableOptions.theme="bs3"}),app.config(function($routeProvider,$locationProvider,$httpProvider){$routeProvider.otherwise({redirectTo:"/a/profile"}),$locationProvider.html5Mode(!0),$httpProvider.interceptors.push("errorNotifier")}),app.controller("MainController",["$scope","$rootScope","$http","$location","Notification","ordersService","organizeStaffService","appServices",function($scope,$rootScope,$http,$location,Notification,OS,OSS,appServices){$scope.workForce={},$scope.modal={},$scope.notification={},$scope.waiting="",$scope.headerTitle="Dashboard",$scope.appName="stocCloud",appServices.getCommons().then(function(r){$scope.commons=r}),$scope.$on("newNotification",function(){$.gritter.add(Notification.notice)}),$scope.$on("newEvent",function(){$scope.modal=Notification.message}),$scope.$on("newCart",function(){}),$scope.$on("activity_refresh",function(){$scope.activity=Notification.activityCount}),$scope.toggleModal=function(modalId,modalData,index){$scope.__modal_data&&delete $scope.__modal_data,modalData&&($scope.__modal_data=angular.copy(modalData)),index&&($scope.__modal_index=index),$("#"+modalId).modal("toggle")}}]),app.filter("moment",function(){return function(time){var m=moment(time);return m.fromNow()}}),app.filter("etaMoment",function(){return function(time){var m=moment(time);return m.calendar()}}),app.filter("dashed",function(){return function(word){return"undefined"==typeof word?"Empty Profile":word}}),app.filter("acctype",function(){return function(index){var accounts=["Pharmaceutical Company","Pharma Manager","Distributor","Dist. Manager","Sales Agent"];return accounts[index]}}),app.filter("showHide",function(){return function(word){return word?"Hide":"Show"}}),app.directive("dropzone",[function(){return{link:function(scope,element,attrs){$(element).dropzone({url:attrs.postUrl,paramName:attrs.postParam,maxFiles:5,clickable:!0,previewsContainer:attrs.previews||!1,autoProcessQueue:!0,init:function(){this.on("success",function(file,name){"object"==typeof scope.ngModel?scope.ngModel.push(name):scope.ngModel=name,scope.$apply(),scope.postCb({name:scope.ngModel}).then(function(){})})}})},scope:{ngModel:"=",postCb:"&"},require:"ngModel"}}]),app.directive("toggleActiveButton",[function(){return{compile:function(element,attrs){element.on("click",function(){var eleClass=attrs.toggleActiveButton;angular.element("."+eleClass).removeClass("btn-success"),element.addClass("btn-success")})}}}]),app.directive("typeAhead",[function(){return{link:function(scope,element){var _productName=new Bloodhound({datumTokenizer:Bloodhound.tokenizers.obj.whitespace("productName"),queryTokenizer:Bloodhound.tokenizers.whitespace,remote:scope.remote});_productName.initialize(),$(element).typeahead({hint:!0,highlight:!0,minLength:1},{name:"product-name",displayKey:"productName",source:_productName.ttAdapter()}),$(element).on("typeahead:selected",function(e,suggestion){scope.typeAhead({result:suggestion})})},scope:{remote:"@",typeAhead:"&"}}}]),app.factory("errorNotifier",["$q","Notification","Language",function($q,N,L){return{responseError:function(response){return console.log(response),N.notifier({title:L[L.set].titles.error,text:response.data.message||response.data,class_name:"growl-danger"}),$q.reject(response)}}}]),app.directive("linkTo",function(){return{link:function(scope,ele){var id=scope.linkToId,accountType=scope.linkToAccountType;switch(scope.linkTo){case"drug":$(ele).prop("href","/a/drugs/"+id+"/item");break;case"user":$(ele).prop("href","/a/organization/people/"+id+"/person/"+accountType);break;default:$(ele).prop("href","/a/drugs/"+id+"/item")}},scope:{linkTo:"@",linkToId:"@",linkToAccountType:"@"}}}),angular.module("language",[]).constant("Language",{set:"eng",eng:{titles:{success:"Well done!",error:"Ooops!"},items:{save:{success:"You have successfully added an item.",error:"Something went wrong while carrying out your last request. If it's nothing serious, you can try again. If this error happens again, please inform the Admin"},autocomplete:{brandname:"",suppliers:""},category:{add:{success:"Category list updated",error:"Error creating an item category"},list:{error:"Error Fetching Categories"}},list:{fetch:{success:"Fetched list of items successfully",error:"Failed to fetch list of items from the server. Will try again"}},form:{add:{success:"Item form list updated",error:"Error updating item form list"},list:{error:"Error fetching item forms"}},packaging:{add:{success:"Packaging list updated",error:"Error updating packaging list"},list:{error:"Error fetching packaging list"}},supplier:{typeahead:{error:"Failed to fetch list of suppliers"}},update:{success:"Item updated successfully",error:"Failed to update this item"}},supplier:{add:{success:"You have added a new supplier",error:"An error occured with the last request"},update:{success:"You have updated this supplier entry",error:"An error occured with this updated, please try again"}},order:{update:{success:"This order has been updated",error:"Order update failed"},fetch:{error:"Can not fetch the list of recent orders"},cart:{place:{success:"You have added one more item to your cart"}},cancel:{success:"Order has been cancelled."}},dispense:{confirm:{amount:{error:"Please check the amount requested is in stock"}},approve:{success:"Sent prescription successfully",error:"Error prescribing items for this patient",fail:"You have not confirmed any items. Check your list"},addDrug:{error:"This item is already in the list"},bills:{view:{success:"",error:"Error viewing this bill"},pay:{success:"Bill payment recorded",error:"Error recording bill payment"}}},stock:{stockto:{success:"Stock down request sent",error:"Error requesting stock down"},stockup:{success:"Stock up request sent",error:"Error requesting stock down"},location:{create:{success:"Created a new stock down location",error:"Could not create a new stock down location"}}},hospital:{register:{success:"New hospital has been added",error:"Could not complete request to add new hospital"},fetch:{error:"Could not fetch list of hospitals"},"delete":{success:"Successfully deleted hospital",error:"Error deleting hospital"}},drug:{search:{error:"Error occured searching the list of drugs",notfound:"Drug not found"},update:{success:"Drug Price Successfully updated",error:"Something went wrong with updating that drug price"},summary:{error:"Can not fetch more information now."}},organization:{invite:{success:"Invitation successfully sent",error:"We could not send this invitation right now. Please try again."},activate:{success:"User successfully activated",error:"We could not send this invitation right now. Please try again."},cancelActivate:{success:"User activation successfully cancelled",error:"We could not cancel this invitation right now. Please try again."}}}}),angular.module("services",[]).factory("Notification",function($rootScope){var s={};return s.activityCount=0,s.notice={title:"",text:"",image:null,sticky:!0,time:""},s.resetNotification=function(){this.notice.message="",this.notice.type="",this.notice.icon="",this.broadcastNotification()},s.notifier=function(m){this.notice=m,this.broadcastNotification()},s.broadcastNotification=function(){$rootScope.$broadcast("newNotification")},s.broadcastEvent=function(){$rootScope.$broadcast("newEvent")},s.broadcastActivity=function(count){s.activityCount=count,$rootScope.$broadcast("activity_refresh")},s}).factory("Dialog",function(){var d={};return d.dom={heading:"",content:""},d}).factory("appServices",["$http",function($http){return{getCommons:function(){return $http.get("/api/internal/commons").then(function(r){return r.data})}}}]).factory("userService",["$http","Notification","Language",function($http,N,L){return{loginUser:function(u,p,cb){$http.post("/api/user/session",{email:encodeURI(u),password:p}).success(function(r){N.notifier({message:L.eng.admin.auth.success,type:"success"}),cb(r)}).error(function(err){N.notifier({message:err,type:"error"})})},logoutUser:function(){$http.delete("/api/user/session/").success(function(){}).error(function(){})}}}]),angular.module("filters",[]);var app=angular.module("directives",[]);app.directive("onFinish",function($timeout){return{restrict:"A",link:function(scope,element,attr){scope.$last===!0&&$timeout(function(){switch(attr.onFinish){case"panorama":$(".panorama").panorama({showscrollbuttons:!1,keyboard:!0,parallax:!1});break;case"tableheader":$("table.table").fixedHeader();break;case"checkViewState":scope.$emit("onFinishLoaded",!0)}})}}}),app.directive("alertMessage",["$interpolate","$sce",function($interpolate,$sce){function gramar(alertType,alertDesc,status){var words={order:{"-1":" {{meta.orderAmount}} {{meta.itemId.itemPackaging}} of {{meta.itemId.itemName}} "+alertDesc+" {{meta.hospitalId.name}}",0:alertDesc+' from <a href="">{{meta.hospitalId.name}}</a> for {{meta.orderAmount}} {{meta.itemId.itemPackaging}} of {{meta.itemId.itemName}}',1:"{{meta.orderAmount}} {{meta.itemId.itemPackaging}} of {{meta.itemId.itemName}}"+alertDesc}};return status=status>1?1:status,words[alertType][status]}return{link:function(scope){var phrase=$interpolate(gramar(scope.act.alertType,scope.act.alertDescription,scope.act.meta.status||0))(scope.act);scope.phrase=$sce.trustAsHtml(phrase)},scope:{act:"=alertMessage"},template:'<strong ng-bind-html="phrase"></strong>'}}]),app.directive("modalbox",[function(){return{link:function($scope,iElm){$(iElm).on("click",function(){$("#mopop").modal("show")})}}}]),app.directive("toggleActiveList",[function(){return{link:function($scope,iElm){iElm.on("click","li",function(e){e.preventDefault(),$("ul.list-block li").removeClass("active"),$(e.currentTarget).addClass("active")})}}}]),app.directive("tooltips",function(){return{restrict:"C",link:function(element,attrs){$(element).tooltip({title:attrs.title})}}}),app.directive("scrollBar",function(){return{link:function(scope,element,attrs){$(element).on("scrollbar",function(){element.height()>=attrs.maxContainerHeight&&element.slimScroll({height:attrs.maxContainerHeight+"px",distance:"0"})})}}}),app.directive("pagination",[function(){function link(scope,element){scope.currentPage=0,$("button.prevbtn",element).on("click",function(){return 0===scope.currentPage?!1:(scope.currentPage--,void scope.$apply())}),$("button.nextbtn",element).on("click",function(){scope.currentPage++,scope.$apply()}),scope.pagelimit=function(pageLimit){scope.pageTo({currentPage:scope.currentPage,pageLimit:pageLimit,cb:function(r){r&&(scope.pageLimit=pageLimit)}}),scope.pageLimit=pageLimit}}return{link:link,scope:{pageTo:"&",currentPage:"=",pageLimit:"="},templateUrl:"/templates/pagination"}}]),app.directive("equals",function(){return{restrict:"A",require:"?ngModel",link:function(scope,elem,attrs,ngModel){if(ngModel){scope.$watch(attrs.ngModel,function(){validate()}),attrs.$observe("equals",function(){validate()});var validate=function(){var val1=ngModel.$viewValue,val2=attrs.equals;ngModel.$setValidity("equals",val1===val2)}}}}}),angular.module("checklist-model",[]).directive("checklistModel",["$parse","$compile",function($parse,$compile){function contains(arr,item){if(angular.isArray(arr))for(var i=0;i<arr.length;i++)if(angular.equals(arr[i],item))return!0;return!1}function add(arr,item){arr=angular.isArray(arr)?arr:[];for(var i=0;i<arr.length;i++)if(angular.equals(arr[i],item))return arr;return arr.push(item),arr}function remove(arr,item){if(angular.isArray(arr))for(var i=0;i<arr.length;i++)if(angular.equals(arr[i],item)){arr.splice(i,1);break}return arr}function postLinkFn(scope,elem,attrs){$compile(elem)(scope);var getter=$parse(attrs.checklistModel),setter=getter.assign,value=$parse(attrs.checklistValue)(scope.$parent);scope.$watch("checked",function(newValue,oldValue){if(newValue!==oldValue){var current=getter(scope.$parent);newValue===!0?setter(scope.$parent,add(current,value)):setter(scope.$parent,remove(current,value))}}),scope.$parent.$watch(attrs.checklistModel,function(newArr){scope.checked=contains(newArr,value)},!0)}return{restrict:"A",priority:1e3,terminal:!0,scope:!0,compile:function(tElement,tAttrs){if("INPUT"!==tElement[0].tagName||!tElement.attr("type","checkbox"))throw'checklist-model should be applied to `input[type="checkbox"]`.';if(!tAttrs.checklistValue)throw"You should provide `checklist-value`.";return tElement.removeAttr("checklist-model"),tElement.attr("ng-model","checked"),postLinkFn}}}]);var hospital=angular.module("facility",[]);hospital.config(["$routeProvider",function($routeProvider){$routeProvider.when("/a/facilities",{templateUrl:"/hospital/index",controller:"hospitalIndexController"}).when("/a/facilities/add",{templateUrl:"/hospital/new",controller:"hospitalAddController"}).when("/a/facilities/:facilityId",{templateUrl:"/hospital/details",controller:"hospitalDeetsController"})}]),hospital.controller("hospitalIndexController",["$scope","facilityServices",function($scope,facilityService){$scope.$parent.headerTitle="Hospitals",$scope.currentPage=0,$scope.pageLimit=20,$scope.remove=function(index){facilityService.remove($scope.hospitals[index]._id,$scope.hospitals[index].user,function(){$scope.hospitals.splice(index,1)})},$scope.search_gvt=function(data){facilityService.searchFacility(data).then(function(res){_.isEmpty(res)?$scope.valRes.length=0:$scope.valRes=res})},$scope.getPageItems=function(currentPage,pageLimit){facilityService.searchFacility({page:currentPage,limit:pageLimit}).then(function(res){_.isEmpty(res)||($scope.valRes=res)})},$scope.$watch("currentPage",function(){$scope.getPageItems($scope.currentPage,$scope.pageLimit)}),$scope.getPageItems($scope.currentPage,$scope.pageLimit)}]),hospital.controller("hospitalAddController",["$scope","facilityServices",function($scope,hs){function init(){$scope.form={}}init(),$scope.regnew=function(){hs.register($scope.form,function(){$scope.form=""})}}]),hospital.controller("hospitalDeetsController",["$scope","facilityServices","$routeParams",function($scope,hs,$routeParams){function init(){$scope.form={};var userId=$routeParams.hospitalId;hs.deets(userId,function(r){$scope._deets=r})}init()}]),hospital.factory("facilityServices",["$http","Notification","Language",function($http,N,Lang){var h={};return h.all=function(options,callback){$http.get("/api/hospitals/pages/"+options.page).success(function(d){callback(d)}).error(function(){N.notifier({message:Lang[Lang.set].hospital.fetch.error,type:"error"})})},h.deets=function(id,cb){$http.get("/api/hospitals/"+id).success(function(r){cb(r)}).error(function(err){N.notifier({message:err,type:"error"})})},h.searchFacility=function(data){return $http.get("/api/internal/facilities/search?type=facilty&"+$.param(data)).then(function(r){return r.data})},h.register=function(post,callback){$http.post("/api/facilities",post).success(function(){N.notifier({message:Lang[Lang.set].hospital.register.success,type:"success"}),callback(!0)}).error(function(){N.notifier({message:Lang[Lang.set].hospital.register.error,type:"error"}),callback(!0)})},h.remove=function(hospitalId,userId,callback){$http.delete("/api/hospitals/"+hospitalId+"/user/"+userId).success(function(){N.notifier({message:Lang[Lang.set].hospital.delete.success,type:"success"}),callback(!0)}).error(function(){N.notifier({message:Lang[Lang.set].hospital.delete.error,type:"error"})})},h}]),angular.module("dashboard",[]).config(["$routeProvider",function($routeProvider){$routeProvider.when("/",{templateUrl:"/home/index",controller:"dashboardIndexController"})}]).controller("dashboardIndexController",function(){}).controller("dashboardOrderController",function(){}),angular.module("order",[]).config(["$routeProvider",function($routeProvider){$routeProvider.when("/a/orders",{templateUrl:"/order/index",controller:"ordersIndexController"}).when("/a/orders/new",{templateUrl:"/order/new-order-search-item",controller:"orderAddController"}).when("/a/orders/cart",{templateUrl:"/order/cart",controller:"orderCartController"})}]).controller("orderCartController",["$scope","$http","ordersService","$rootScope","Notification",function($scope,$http,ordersService,$rootScope,N){$scope.$parent.headerTitle="Pending Quotations",$scope.orderCart=[],ordersService.orders("quotes","full").then(function(i){angular.forEach(i,function(v){try{0===v.status&&v.itemId.instantQuote===!1?(v.viewPrice="...",v.canGo=!1):(v.viewPrice=v.perItemPrice*v.orderAmount,v.canGo=!0),$scope.orderCart.push(v)}catch(e){N.notifier({title:"Ooops!",text:"We could not load one of the quotes",class_name:"growl-danger"})}})}),$scope.order_this=function(order,index){ordersService.postCartItem(order).then(function(){$scope.orderCart.splice(index,1),$scope.my_quotation.splice(index,1)})},$scope.removeFromCart=function(index){ordersService.remove($scope.orderCart[index].orderId).then(function(){$scope.orderCart.splice(index,1),$scope.my_quotation.splice(index,1)})}}]).controller("ordersIndexController",["$scope","$http","$location","$routeParams","ordersService","organizeStaffService",function($scope,$http,$location,$routeParams,ordersService,organizeStaffService){$scope.$parent.headerTitle="Orders",$scope.ordersfilter={orderStatus:""},$scope.orderStatusFilter=function(item){var state=$scope.orderFilter.status;return 2==state?item.status<2?!0:!1:3==state?item.status>=2&&item.status<5?!0:!1:6==state&&item.status>=5&&item.status<=6?!0:!1},function(){$scope.orders=[],$scope.__temp={},ordersService.orders(7,"full").then(function(r){switch(angular.forEach(r,function(v){$scope.orders.push(v)}),$routeParams.type){case"invoices":$scope.ordersfilter.orderStatus="Supplied";break;case"order":console.log("message"),$scope.ordersfilter.orderStatus="Pending Order";break;default:$scope.ordersfilter.orderStatus=""}})}(),$scope.hide_order=function(index){var orderId=$scope.orders[index].orderId;ordersService.hideOrderItem(orderId).then(function(){$scope.orders.splice(index,1)})},$scope.check_people=function(){_.isEmpty($scope.employer_peeps)&&organizeStaffService.getMyPeople({account_type:4}).then(function(dp){$scope.employer_peeps=dp})},$scope.get_status_updates=function(n){var orderId=n.orderId;ordersService.getOrderStatusUpdates(orderId).then(function(data){n.statusLog=data,setTimeout(function(){$(".tooltips").tooltip()},1e3)})},$scope.open_order_manager=function(cmp){$scope.__manageOrderModal=cmp},$scope.update_order=function(order,index){ordersService.updateOrder(order).then(function(){$scope.orders[index]=order,$("#manage-order-modal").modal("hide")})},$scope.cancel_order=function(order,index){order.status=-1,ordersService.updateOrder(order).then(function(){$scope.orders[index]=order,$("#manage-order-modal").modal("hide")})},$scope.__isEnabled=function(status,permission){var per={change_price:[0,1],send_quotation_button:[0,1],change_qty:[0,1],update_order:[3,4,5],comment:[1],resolution:[2,3,4,5],option_r_confirm:[2],option_r_in_transit:[3],option_r_supplied:[4],option_r_paid:[5],cancel_order:[1,2,3,4]};return per[permission].indexOf(parseInt(status))>-1?!0:!1}}]).controller("orderAddController",function($scope,$http,$location,ordersService,drugService,$routeParams){$scope.form={itemData:{},supplierData:{}},$scope.searchedItems=null,$scope.modal={},$routeParams.itemId&&drugService.summary($routeParams.itemId,"main",function(r){$scope.summary=r,$scope.form.itemData.itemName=r.itemName,$scope.form.itemData.id=r._id,$scope.form.nafdacRegNo=r.nafdacRegNo,$scope.form.nafdacRegName=r.itemName,$scope.form.orderPrice=r.itemPurchaseRate,$scope.form.suppliers={supplierName:r.supplierName,supplierID:r.supplierID}}),$scope.search=function(queryObj){ordersService.searchCmp(queryObj).then(function(r){angular.forEach(r.drug,function(v,i){r.drug[i].packageQty=1}),$scope.searchedItems=r,$scope.searchedItems.s=queryObj.s})},$scope.more=function(index){ordersService.moreInfo($scope.cmps[index]._id,function(r){$scope.ds=r,$scope.ds.index=index})},$scope.saveButtonClass="btn-primary",$scope.submitOrder=function(){ordersService.save($scope.form,function(){$scope.form=""})},$scope.add_to_cart=function(item){return item.packageCount?(item.orderAmount=item.packageCount*item.packageQty,void ordersService.addToQuotations(item).then(function(data){item.sentRequest="sent",$scope.my_quotation.push(data),$scope.form=""})):!1}}).factory("ordersService",["$http","Notification","Language",function($http,N,L){var f={};return f.searchCmp=function(queryCmp){return $http.get("/api/internal/item/search?"+$.param(queryCmp)).then(function(i){return i.data},function(err){return err})},f.orders=function(status,displayType){return $http.get("/api/internal/orders/"+status+"/display/"+displayType).then(function(d){return d.data},function(err){return err})},f.postCartItem=function(form){return $http.put("/api/internal/orders/"+form.orderId+"/status/2",form).then(function(r){return N.notifier({title:L[L.set].titles.success,text:L[L.set].order.cart.place.success,class_name:"growl-success"}),r.data},function(){})},f.addToQuotations=function(form){return $http.post("/api/internal/orders",form).then(function(r){return N.notifier({title:L[L.set].titles.success,text:L[L.set].order.cart.place.success,class_name:"growl-success"}),r.data},function(err){N.notifier({title:L[L.set].titles.error,text:err,class_name:"growl-danger"})})},f.fetchActivities=function(){return $http.get("/api/internal/activities").then(function(r){return r.data},function(err){return err})},f.updateOrder=function(o){return $http.put("/api/internal/orders/"+escape(o.orderId),o).then(function(data){return N.notifier({title:L[L.set].titles.error,text:L[L.set].order.update.success,class_name:"growl-success"}),data.data})},f.count=function(callback){$http.get("api/orders/count").success(function(d){callback(d)})},f.hideOrderItem=function(orderId){return $http.delete("/api/internal/orders/"+orderId).then(function(r){return r.data},function(){})},f.remove=function(order_id){return $http.delete("/api/internal/orders/"+order_id).then(function(r){return N.notifier({title:L[L.set].titles.success,text:L[L.set].order.cancel.success,class_name:"growl-success"}),r.data})},f.notifySupplier=function(id,type,cb){$http.post("/api/internal/suppliers/"+id+"/notify?type="+type).success(function(d){cb(d)}).error(function(){})},f.getOrderStatusUpdates=function(orderId){return $http.get("/api/internal/orders/"+orderId+"/statuses").then(function(data){return data.data},function(err){N.notifier({title:L[L.set].titles.error,text:err,class_name:"growl-danger"})})},f}]).directive("orderSupplierTypeAhead",["itemsService",function(itemsService){var linker=function(scope,element){var nx;element.typeahead({source:function(query,process){return itemsService.getSupplierName(query,function(results,s){return nx=s,process(results)})},updater:function(name){return _.some(nx,function(v){return v.supplierName===name?(scope.form.suppliers={supplierID:v._id,supplierName:v.supplierName},!0):void 0}),scope.$apply(),name}})};return{link:linker}}]).directive("orderItemTypeAhead",["itemsService",function(itemsService){var linker=function(scope,element){var nx;element.typeahead({source:function(query,process){return itemsService.getItemName(query,function(results,s){return nx=s,process(results)})},updater:function(name){return itemsService.summary(name,"main",function(r){scope.form.itemData.itemName=r.itemName,scope.form.itemData.id=r._id,scope.form.suppliers={supplierID:r.suppliers[0]._id,supplierName:r.suppliers[0].supplierName},scope.form.nafdacRegNo=r.nafdacRegNo,scope.form.nafdacRegName=r.itemName,scope.form.orderPrice=r.itemPurchaseRate,scope.summary=r}),scope.$apply(),name}})};return{link:linker}}]).directive("orderCartBasket",["ordersService","$rootScope",function(OS){return{link:function(scope){OS.orders("quotes","count").then(function(i){scope.my_quotation=i})},controller:"orderCartController"}}]).filter("orderState",function(){return function(num){switch(parseInt(num)){case-1:return"cancelled";case 0:return"requesting quote";case 1:return"replied quote";case 2:return"order accepted";case 3:return"confirmed";case 4:return"in transit";case 5:return"supplied";case 6:return"paid";default:return"archived"}}}),angular.module("report",[]).config(["$routeProvider",function($routeProvider){$routeProvider.when("/reports",{templateUrl:"/reports/dashboard",controller:"reportsDashboardController"})}]).controller("reportsDashboardController",function(){}),angular.module("drug",[]).config(["$routeProvider","$locationProvider",function($routeProvider,$locationProvider){$routeProvider.when("/a/drugs",{templateUrl:"/drug/index",controller:"drugIndexController"}).when("/a/drugs/:drugId/item",{templateUrl:"/drug/public-item",controller:"drugPageController"}).when("/a/users/:userId/drugs/:drugId/item",{templateUrl:"/drug/one-item",controller:"drugPageController"}).when("/a/drugs/add-new",{templateUrl:"/drug/add",controller:"drugAddController"}),$locationProvider.html5Mode(!0)}]).controller("drugIndexController",["$scope","drugService","organizeStaffService",function($scope,ds,oss){function __init(){$scope._pending=[],$scope._request=[],$scope.currentPage=0,$scope.pageLimit=20,$scope.getPageItems=function(currentPage,pageLimit){ds.fetchAll({page:currentPage,limit:pageLimit}).then(function(r){_.isEmpty(r)||($scope._drugs=r)})},$scope.getPageItems($scope.currentPage,$scope.pageLimit),ds.getStockDownRequest().then(function(r){angular.forEach(r,function(v){$scope._pending.push(v)}),ds.getStockUpRequest().then(function(u){angular.forEach(u,function(v){$scope._request.push(v)})})}),ds.getPendingStock("stockDown").then(function(r){angular.forEach(r,function(v){$scope._request.push(v)}),ds.getPendingStock("stockUp").then(function(u){angular.forEach(u,function(v){$scope._pending.push(v)})})})}$scope.$parent.headerTitle="All Drug Items",__init(),$scope.searchcmp=function(){$scope.summary=$scope.newprice="",ds.search($scope.drugname,0,function(r){$scope.drugs=r})},$scope.more=function(index){ds.moreInfo($scope.drugs[index]._id,function(r){$scope.summary=r,$scope.summary.index=index})},$scope.up=function(id,price,index){console.log(price),ds.updatePrice(id,price,function(){$scope.drugs[index].currentPrice=price,$scope.newprice=""})},$scope.add_to_list=function(item){oss.addToMyList({drugId:item._id}).then(function(){})},$scope.item_stock=function(item){$scope.current_item=item},$scope.stock_from=function(stockUp){var current_item=$scope.current_item;ds.postStockUp(stockUp,current_item._id).then(function(){$scope.stockUp={},$("#manage-stock-modal").modal("hide")})},$scope.stock_to=function(stockTo){var current_item=$scope.current_item;ds.postStockTo(stockTo,current_item._id).then(function(){$scope.stockTo={},$("#manage-stock-modal").modal("hide")})},$scope.view_stock_up=function(current_item){ds.getStockUpHistory(current_item._id).then(function(done){$scope.stockLog=done})},$scope.view_stock_down=function(current_item){ds.getStockDownHistory(current_item._id).then(function(done){$scope.stockLog=done})},$scope.approve_request=function(item){var nextStatus=item.status<2?item.status+1:2;ds.attendRequest(item.itemId._id,item.transactionId,nextStatus).then(function(done){item.status=done.nextStatus})},$scope.reject_request=function(item){var nextStatus=-1;ds.attendRequest(item.itemId._id,item.transactionId,nextStatus).then(function(done){item.status=done.nextStatus})},$scope.cancel_request=function(item){var nextStatus=-2;ds.cancelRequest(item.itemId._id,item.transactionId,nextStatus).then(function(done){item.status=done.status})},$scope.$watch("currentPage",function(){$scope.getPageItems($scope.currentPage,$scope.pageLimit)})}]).controller("drugAddController",["$scope","drugService",function($scope,ds){$scope.add_item_form={images:[],pharma:{},distributor:[]},$scope.autoCompleteItemName=function(result){$scope.add_item_form.itemName=result.productName,$scope.add_item_form.sciName=result.composition,$scope.add_item_form.nafdacRegNo=result.regNo,$scope.add_item_form.pharma.pharmaName=result.man_imp_supp,$scope.$apply()},$scope.add_drug=function(data){ds.addNewDrug(data).then(function(r){r instanceof Error?console.log(r):"newAddition"===$scope.nextAction?$scope.add_item_form="":"listPage"===$scope.nextAction&&$scope.commons.href("/a/drugs")})},$scope.search_by_reg_no=function(regNo){ds.getByRegNo(regNo.toUpperCase()).then(function(r){return"null"===r?(alert("Not found"),!1):($scope.add_item_form.itemName=r.productName,$scope.add_item_form.nafdacRegNo=r.regNo,$scope.add_item_form.pharma.pharmaName=r.man_imp_supp,$scope.add_item_form.sciName=r.composition,$scope.add_item_form.nafdacId=r._id,void 0)})}}]).controller("drugPageController",["$scope","drugService","$routeParams",function($scope,ds,$routeParams){function __init(){ds.fetchOne($routeParams.drugId).then(function(res){$scope.item=res,$scope.$parent.headerTitle=res.itemName})}__init(),$scope.updateItem=function(data,val){var field=val.split(".");return ds.updateOne($routeParams.drugId,{name:field[1],value:data})},$scope.updatePrice=function(data,val){var field=val.split(".");return ds.updateOne($routeParams.drugId,{name:field[1]+"."+field[2],value:data})},$scope.change_profile_photo=function(name){return ds.updateOne($routeParams.drugId,{name:"images",value:name})}}]).filter("stockRequestState",function(){var states={"-1":"request cancelled.",0:"request sent",1:"request confirmed and verified"};return function(num){return states[num]}}).filter("instantQuote",function(){return function(bool){return bool===!0?"Quote Available":"Quote Not Available"}}).factory("drugService",["$http","Notification","Language",function($http,N,L){var d={};return d.attendRequest=function(itemId,transactionId,nextStatus){return $http.post("/api/internal/drugs/"+itemId+"/requests/"+transactionId+"?nextStatus="+nextStatus).then(function(done){return done.data})},d.cancelRequest=function(itemId,transactionId,nextStatus){return $http.delete("/api/internal/drugs/"+itemId+"/requests/"+transactionId+"?nextStatus="+nextStatus).then(function(done){return done.data})},d.getByRegNo=function(query){return $http.get("/api/internal/nafdacdrugs/search?q="+encodeURI(query)).then(function(d){return d.data})},d.getStockUpHistory=function(itemId){return $http.get("/api/internal/drugs/"+itemId+"/history?action=stockUp").then(function(r){return r.data})},d.getStockUpRequest=function(){return $http.get("/api/internal/drugs/requests?action=stockUp").then(function(r){return r.data})},d.getStockDownHistory=function(itemId){return $http.get("/api/internal/drugs/"+itemId+"/history?action=stockDown").then(function(r){return r.data})},d.getStockDownRequest=function(){return $http.get("/api/internal/drugs/requests?action=stockDown").then(function(r){return r.data})},d.addNewDrug=function(data){return $http.post("/api/internal/drugs",data).then(function(r){return N.notifier({title:"Yippie!",text:L[L.set].items.save.success,class_name:"growl-success"}),r.data},function(err){return N.notifier({title:"Oops!",text:L[L.set].items.save.error,class_name:"growl-danger"}),err})},d.fetchAll=function(options){return options=options||{},$http.get("/api/internal/drugs?"+$.param(options)).then(function(r){return r.data},function(err){return err})},d.fetchOne=function(id){return $http.get("/api/internal/drugs/"+id+"/item").then(function(d){return d.data},function(err){return err})},d.updateOne=function(id,data){return $http.put("/api/internal/drugs/"+id+"/item",data).then(function(d){return d.data},function(err){return err})},d.deleteOne=function(id){return $http.delete("/api/internal/drugs/"+id+"/item").then(function(d){return d.data},function(err){return err})},d.search=function(srchstr,page,callback){$http.get("/api/internal/drugs/"+srchstr+"/page/"+page).success(function(d){_.isEmpty(d)&&N.notifier({message:L[L.set].drug.search.notfound,type:"error"}),callback(d)}).error(function(){N.notifier({message:L[L.set].drug.search.error,type:"error"})
})},d.moreInfo=function(id,callback){$http.get("/api/internal/drugs/"+id+"/view/summary").success(function(d){callback(d)}).error(function(){N.notifier({message:L[L.set].drug.summary.error,type:"error"})})},d.updatePrice=function(id,price,cb){$http.put("/api/internal/drugs/"+id,{price:price}).success(function(){N.notifier({message:L[L.set].drug.update.success,type:"success"}),cb()}).error(function(){N.notifier({message:L[L.set].drug.update.error,title:L[L.set].stock.stockup.success,type:"error"})})},d.postStockTo=function(stockToData,itemId){return $http.post("/api/internal/drugs/"+itemId+"/stockto",stockToData).then(function(done){return N.notifier({title:L[L.set].titles.success,text:L[L.set].stock.stockto.success,class_name:"growl-success"}),done.data})},d.postStockUp=function(stockUpData,itemId){return $http.post("/api/internal/drugs/"+itemId+"/stockup",stockUpData).then(function(done){return N.notifier({title:L[L.set].titles.success,text:L[L.set].stock.stockup.success,class_name:"growl-success"}),done.data})},d.getPendingStock=function(action){return $http.get("/api/internal/drugs/history?action="+action).then(function(res){return res.data})},d}]),angular.module("bills",[]).config(["$routeProvider",function($routeProvider){$routeProvider.when("/bills",{templateUrl:"/bills/index",controller:"billsController"})}]).controller("billsController",["$scope","$location","$routeParams","billsService",function($scope,$location,$routeParams,billsService){function init(){billsService.bills(function(f){$scope.bills=f})}init()}]).factory("billsService",["$http","Notification","Language",function($http,Notification,Lang){var i={};return i.bills=function(callback){$http.get("/api/bills").success(callback)},i.aBill=function(dispense_id,callback){$http.get("/api/bills/dispense/"+dispense_id).success(function(data){callback(data)}).error(function(){Notification.notifier({message:Lang.eng.dispense.bills.view.error,type:"error"})})},i.postpay=function(amount,bill_id,callback){$http.put("/api/bills/"+bill_id,{amount:amount}).success(function(){Notification.notifier({message:Lang.eng.dispense.bills.pay.success,type:"success"}),callback(!0)}).error(function(){Notification.notifier({message:Lang.eng.dispense.bills.pay.error,type:"error"})})},i.pt=function(query,callback){$.getJSON("/api/bills/profiles/typeahead/"+escape(query),function(s){var results=[];$.each(s,function(){results.push(this.profileName)}),callback(results,s)})},i.profiles=function(callback){$http.get("/api/bills/profiles").success(function(data){callback(data)}).error(function(){Notification.notifier({message:Lang.eng.bills.profiles.fetch.error,type:"error"})})},i.createProfile=function(profile,rules,callback){var r=[];_.each(rules,function(v){r.push(v._id)}),$http.post("/api/bills/profiles/",{rules:r,name:profile.name}).success(function(){Notification.notifier({message:Lang.eng.bills.profiles.create.success,type:"success"}),callback(!0)}).error(function(){Notification.notifier({message:Lang.eng.bills.profiles.create.error,type:"error"})})},i.updateProfile=function(profile,rules){var profile_id=profile.id||0;$http.put("/api/bills/profiles/"+profile_id,{rules:rules,name:profile.name}).success(function(){Notification.notifier({message:Lang.eng.bills.profiles.save.success,type:"success"})}).error(function(){Notification.notifier({message:Lang.eng.bills.profiles.save.error,type:"error"})})},i.brules=function(profile_id,callback){$http.get("/api/bills/profiles/"+profile_id+"/rules").success(function(data){callback(data)}).error(function(){Notification.notifier({message:Lang.eng.bills.rule.fetch.error,type:"error"})})},i.allrules=function(callback){$http.get("/api/bills/rules").success(function(data){callback(data)}).error(function(){Notification.notifier({message:Lang.eng.bills.rule.fetch.error,type:"error"})})},i.newruleR=function(rule,callback){$http.post("/api/bills/rules",rule).success(function(){Notification.notifier({message:Lang.eng.bills.rule.add.success,type:"success"}),callback(!0)}).error(function(){Notification.notifier({message:Lang.eng.bills.rule.add.error,type:"error"}),callback(!0)})},i}]),angular.module("dispense",[]).config(["$routeProvider",function($routeProvider){$routeProvider.when("/dispensary",{templateUrl:"/items/dispense",controller:"dispensaryController"}).when("/dispensary/:dispenseID",{templateUrl:"/items/dispense",controller:"dispensaryController"})}]).controller("dispensaryController",["$scope","$location","$routeParams","itemsService","Notification","Language","billsService",function($scope,$location,$routeParams,itemsService,Notification,Lang,biller){function init(){$scope.dispenseform={prescription:[]},itemsService.getPoints(function(res){$scope.locations=res}),$scope.drugsList=[],$scope.d=[],itemsService.fetchDispenseRecords("complete",function(r){$scope.dispenseHistory=r}),$scope.drugname=""}function chip_form(wl){return console.log(wl),{patientName:wl.patientName,"class":wl.class,patientno:wl.patientId,doctorName:wl.doctorName,doctorId:wl.doctorId,_id:wl._id,location:wl.locationId}}function chip_d(wl){var u=[];return _.some(wl.drugs,function(v,i){return u.push({item:v.item,itemName:v.item.itemName,amount:v.amount,status:v.status}),wl.drugs.length===i+1?!0:void 0}),u}function chip_dl(wl){var u=[];return _.some(wl.drugs,function(v,i){return u.push(v.item.itemName),wl.drugs.length===i+1?!0:void 0}),u}init(),$routeParams.dispenseID?($scope.n_w=!0,$scope.all=!1,$scope.btnState=!0,$scope.dispenseform=chip_form($scope.waiting[$routeParams.dispenseID]),$scope.d=chip_d($scope.waiting[$routeParams.dispenseID]),$scope.drugsList=chip_dl($scope.waiting[$routeParams.dispenseID])):($scope.n_w=!1,$scope.all=!0,$scope.btnState=!1),$scope.addButtonText="Add",$scope.addHelpText="",$scope.$watch("selectedItem.itemname",function(newValue,oldValue){newValue!==oldValue&&($scope.thisItemName=newValue)}),$scope.addDrug=function(){return 0===$scope.drugname.length||_.isUndefined($scope.dispenseform.location)?!1:($scope.addHelpText="",void itemsService.summary($scope.thisItemName,$scope.dispenseform.location._id,function(c){_.indexOf($scope.drugsList,$scope.thisItemName)<0?($scope.drugsList.push($scope.thisItemName),$scope.d.push(c),$scope.drugname=""):Notification.notifier({message:Language.eng.dispense.addDrug.error,type:"error"})}))},$scope.prescribeThis=function(index){return $scope.drugname="","alternative"==$scope.d[index].options?($scope.addHelpText="This is an alternative to "+d.itemName,$scope.dispenseform.prescription.push(d),void($scope.d[index].ready=!0)):void($scope.d[index].amount<$scope.d[index].currentStock?($scope.dispenseform.prescription.push($scope.d[index]),$scope.d[index].ready=!0):Notification.notifier({message:Lang.eng.dispense.confirm.amount.error,type:"error"}))},$scope.approveThis=function(){return 0===$scope.dispenseform.prescription.length?(Notification.notifier({message:Lang.eng.dispense.approve.fail,type:"error"}),!1):void Notification.modal({heading:"Confirm Prescription",type:"success"})},$scope.sendDis=function(){var drugs=[];_.forEach($scope.dispenseform.prescription,function(v){drugs.push({_id:v._id,amount:v.amount,itemName:v.itemName,status:v.options,dosage:v.dosage,period:v.period,cost:v.itemPurchaseRate})});var toSend={patientName:$scope.dispenseform.patientName,patientId:$scope.dispenseform.patientno,"class":$scope.dispenseform.class._id,drugs:drugs,location:$scope.dispenseform.location};itemsService.dispense(toSend,function(){$scope.dispenseform="",$scope.d="",$scope.drugsList=""})},$scope.removeDrug=function(index){$scope.drugname="",$scope.drugsList.splice(index,1),$scope.d.splice(index,1)},$scope.viewBill=function(dispense_id){$scope.activeBill={},biller.aBill(dispense_id,function(r){$scope.activeBill=r,$scope.activeBill.outstanding=Math.round(r.billCost-r.sofar)})},$scope.markpaid=function(amount,bill_id){biller.postpay(amount,bill_id,function(){$scope.activeBill.paymentHistory.push({amount:amount,date:$.now()}),$scope.newpaymentamount=0,$scope.activeBill.outstanding=Math.round($scope.activeBill.outstanding-amount)})},$scope.adjust_amount=function(index){var val;switch($scope.d[index].dosage){case"Once Daily (OD)":val=1;break;case"Bi-Daily (BD)":val=2;break;case"3 Daily (TDS)":val=3;break;case"4 Daily (QDS)":val=4}$scope.d[index].amount=val*$scope.d[index].period},$scope.print_bill=function(){$("#dialog-view-bill .modal-body").printArea({mode:"iframe"})},biller.profiles(function(r){$scope.profiles=r})}]).controller("viewBillController",["$scope","billsService",function($scope,biller){$scope.activeBill={paymentHistory:[]},biller.aBill(dispense_id,function(r){console.log("why"),$scope.activeBill=r,0===r.paymentHistory.length&&(console.log("hello"),$scope.activeBill.paymentHistory.push({amount:"",date:"$.now("}))})}]),angular.module("supplier",[]).config(["$routeProvider",function($routeProvider){$routeProvider.when("/suppliers",{templateUrl:"/suppliers/index",controller:"supplierIndexController"}).when("/suppliers/add",{templateUrl:"/suppliers/new",controller:"supplierAddController"}).when("/suppliers/:supplierId/edit",{templateUrl:"/suppliers/edit",controller:"supplierEditController"})}]).controller("supplierIndexController",function($scope,$location,$routeParams,supplierServices){function init(){$scope.supplierList={},$scope.supplierView={},supplierServices.all(1,function(r){r!==!1&&($scope.supplierList=r)})}init(),$scope.viewMore=function(index){$("#modal-supplier-view").modal("toggle"),$scope.supplierView=$scope.supplierList[index]},$scope.removeSupplier=function(index){var id=$scope.supplierList[index]._id;supplierServices.remove(id,function(){})}}).controller("supplierAddController",function($scope,$location,$routeParams,supplierServices){$scope.supplierForm={},$scope.addSupplier=function(){supplierServices.post($scope.supplierForm,function(r){r!==!1&&($scope.supplierForm="")})}}).controller("supplierEditController",function($scope,$location,$routeParams,supplierServices){function init(){$routeParams.supplierId.length>0&&supplierServices.one($routeParams.supplierId,function(r){$scope.supplierForm=r})}$scope.supplierForm={},init(),$scope.update=function(){supplierServices.update($scope.supplierForm,function(r){})}}).factory("supplierServices",["$http","Notification","Language",function($http,Notification,Lang){var a={};return a.all=function(page,callback){$http.get("/api/supplier/"+page).success(function(data){callback(data)}).error(function(){callback(!1)})},a.post=function(supplierData,callback){$http.post("/api/supplier",supplierData).success(function(data){Notification.modal({heading:"Supplier Added",body:Lang.eng.supplier.add.success,type:"success"}),callback(data)}).error(function(){Notification.modal({heading:"Supplier Operation Error",body:Lang.eng.supplier.add.error,type:"error"}),callback(!1)})},a.one=function(supplierId,callback){$http.get("/api/supplier/"+supplierId).success(function(data){callback(data)}).error(function(){callback(!1)})},a.update=function(supplierData,callback){var supplierId=supplierData._id;$http.put("/api/supplier/"+supplierId,supplierData).success(function(data){Notification.notifier({message:Lang.eng.supplier.update.success,type:"success"}),callback(data)}).error(function(){Notification.notifier({message:Lang.eng.supplier.update.error,type:"error"}),callback(!1)})},a.remove=function(id){$http.delete("/api/supplier/"+id).success(function(){Notification.notifier({message:"Supplier Deleted",type:"success"})}).error(function(){Notification.notifier({message:"Error deleting this supplier",type:"error"})})},a}]),angular.module("admin",[]).config(["$routeProvider",function($routeProvider){$routeProvider.when("/admin",{templateUrl:"/admin/index",controller:"adminController"})}]).controller("adminController",["$scope","billsService",function($scope,biller){function init(){$scope.newrule={reference:{}},$scope.p=[],$scope.activeProfile=[],$scope.listrules=[],$scope.l=[],$scope.profileInput={name:"",id:0},biller.profiles(function(r){$scope.profiles=r,angular.forEach(r,function(value){$scope.p.push(value.profileName)})})}init(),$scope.newruleC=function(){biller.newruleR($scope.newrule,function(){})},$scope.popRules=function(){biller.allrules(function(r){$scope.rulez=r})},$scope.pushrule=function(index){return _.indexOf($scope.l,$scope.rulez[index].name)>-1?!1:($scope.l.push($scope.rulez[index].name),void $scope.listrules.push($scope.rulez[index]))},$scope.$watch("activeProfile",function(n){return 0===n.length?!1:($scope.profileInput.name=n.profileName,$scope.profileInput.id=n._id,void biller.brules(n._id,function(r){$scope.l=[],angular.forEach(r,function(value){$scope.l.push(value.name)}),$scope.listrules=r}))},!0),$scope.saveProfile=function(){return 0===$scope.profileInput.name.length?!1:void(_.indexOf($scope.p,$scope.profileInput.name)>-1?biller.updateProfile($scope.profileInput,$scope.listrules,function(){}):biller.createProfile($scope.profileInput,$scope.listrules,function(){$scope.p.push($scope.profileInput.name)}))}}]).directive("propdrug",["itemsService",function(itemsService){var linker=function(scope,element){var nx;element.typeahead({source:function(query,process){return"all"===query||"ALL"===query||"All"===query||"*"===query?process(["All"]):itemsService.getItemName(query,function(results,s){return nx=s,process(results)})},updater:function(name){return _.some(nx,function(v){return v.itemName===name?(scope.newrule.reference.id=v._id,scope.newrule.reference.name=v.itemName,!0):void 0}),scope.$apply(),name}})};return{link:linker}}]),angular.module("stock",[]).controller("stockIndexController",function(){}),angular.module("user",[]).config(["$routeProvider",function($routeProvider){$routeProvider.when("/a/profile",{templateUrl:"/user/profile",controller:"userController"})}]).controller("userController",["$scope","userServices","ordersService","Notification","drugService","organizeStaffService","facilityServices",function($scope,US,ordersService,N,ds,oss,facilityService){$scope.$parent.headerTitle="Profile",$scope.activity=[],US.fetchActivities().then(function(i){angular.forEach(i,function(v){v.created=new Date(v.created),$scope.activity.push(v)}),N.broadcastActivity(i.length)}),US.fetchProfile().then(function(i){$scope.userProfile=i,$scope.userProfile.image=i.image||"default-avatar.jpg"}),$scope.confirm_order=function(order){order.orderStatus=3,ordersService.updateOrder(order).then(function(){})},$scope.update_profile=function(data,value){var field=value.split(".");US.updateProfile({name:field[1],value:data}).then(function(){})},$scope.update_account_notices=function(field){var value=$scope.userAccount.allowedNotifications[field];US.updateAccount({name:"allowedNotifications."+field,value:!value}).then(function(){N.notifier({title:"Success",text:"Alert preference changed!!",class_name:"growl-success"})})},$scope.validate_facility=function(data){facilityService.searchFacility(data).then(function(res){$scope.valRes=_.isEmpty(res)?"none":res})},$scope.validate_this=function(res){US.validateThis(res).then(function(){$("#activate-hospital-modal").modal("hide")})},$scope.quickQuote=[],$scope.place_quick_cart=function(load){function __qu(){var item=load.pop();return item.packageCount?(item.orderAmount=item.packageCount*item.itemId.packageQty,item.owner={userId:item.itemId.supplier.supplierId,account_type:2},item.currentPrice=item.itemId.currentPrice,item.itemId=item.itemId._id,delete item._id,void ordersService.addToQuotations(item).then(function(data){item.sentRequest="sent",$scope.my_quotation.push(data),l++,load.length?__qu():N.notifier({title:"Welldone!",text:l+"Quick Quote(s) Requested",class_name:"growl-success"})})):alert("please check the amount to be ordered.")}var l=0;__qu()},$scope.remove_my_drug=function(drugId,index){oss.removeMyDrug(drugId).then(function(){$scope.userProfile.drugs.splice(index,1)})},$scope.change_profile_photo=function(name){return US.updateProfile({name:"image",value:name})}}]).filter("territory",function(){return function(arr){var e="";return angular.forEach(arr,function(v){e+=", "+v.toUpperCase()}),e}}).factory("userServices",["$http","Notification",function($http,N){return{fetchActivities:function(){return $http.get("/api/internal/activities").then(function(r){return r.data})},fetchProfile:function(){return $http.get("/api/internal/users/profile").then(function(r){return r.data})},updateProfile:function(data){return $http.put("/api/internal/users/profile",data).then(function(r){return r.data})},updateAccount:function(data){return $http.put("/api/internal/users",data).then(function(r){return r.data})},validateThis:function(data){return $http.post("/api/internal/facilities/validate",data).then(function(r){return N.notifier({title:"Welldone",text:"Hospital Validated Successfully",class_name:"growl-success"}),r.data})}}}]),angular.module("organization",[]).config(["$routeProvider",function($routeProvider){$routeProvider.when("/a/organization/people/:accountType",{templateUrl:"/organization/all-staff",controller:"staffController"}),$routeProvider.when("/a/organization/people/:personId/person/:accountType",{templateUrl:"/organization/profile",controller:"personController"}),$routeProvider.when("/a/organization/invitations",{templateUrl:"/organization/invites",controller:"invitesController"})}]).controller("staffController",["$scope","organizeStaffService","$routeParams","$timeout",function($scope,oss,$routeParams,$timeout){$scope.$parent.headerTitle="Organization",oss.getMyPeople({account_type:$routeParams.accountType}).then(function(data){$scope.people=data}),$scope.onDropAssignWard=function(e){angular.element(e.target).removeClass("collection-li-over");var lgaName=angular.element(e.target).scope().col.name,staffId=angular.element(e.target).scope().dndDragItem.userId._id;oss.addLgaToStaff(lgaName,staffId).then(function(){var indx=angular.element(e.target).scope().dndDragItem.ndx;$timeout(function(){$scope.people[indx].coverage.push(lgaName)})})},$scope.onOver=function(e){$(e.target).addClass("collection-li-over")},$scope.onOut=function(e){$(e.target).removeClass("collection-li-over")},$scope.$watch("current_state",function(n){n&&(oss.getLGA(n).then(function(lga){$scope.lgas=lga}),oss.getMedFac(n).then(function(med){$scope.meds=med}))})}]).controller("personController",["$scope","organizeStaffService","$routeParams",function($scope,oss,$routeParams){$scope.$parent.headerTitle="Profile",oss.getPersonProfile({account_type:$routeParams.accountType,userId:$routeParams.personId}).then(function(data){$scope.person=data})}]).controller("invitesController",["$scope","organizeStaffService",function($scope,oss){oss.loadInvites().then(function(r){$scope.invites=r}),$scope.create_new_staff=function(){oss.inviteStaff($scope.new_staff).then(function(){$scope.new_staff={}})},$scope.activate_staff=function(index){oss.activateStaff($scope.invites[index]).then(function(){$scope.invites.splice(index,1)})},$scope.cancel_staff=function(index){oss.cancelStaff($scope.invites[index]).then(function(){$scope.invites.splice(index,1)})}}]).directive("staffSelect",["organizeStaffService",function(oss){return{link:function(scope,element,attrs){var kind=attrs.kind;oss.getMyWorkForce(kind).then(function(wf){scope.pplWf=[],angular.forEach(_.compact(wf),function(v){_.isArray(v)?angular.forEach(_.compact(v),function(vSub){vSub.personTag=vSub.name+" <"+vSub.userId.email+">",scope.pplWf.push(vSub)}):(v.personTag=v.name+" <"+v.userId.email+">",scope.pplWf.push(v))})})},scope:{staffSelect:"="},template:'<select class="form-control" ng-model="staffSelect.staff" placeholder="name or email address" ng-options="c.personTag for c in pplWf " required></select>'}}]).factory("organizeStaffService",["$http","Notification","Language",function($http,N,L){return{inviteStaff:function(form){return $http.post("/api/internal/organization/invites",form).then(function(r){return N.notifier({title:L[L.set].titles.success,text:L[L.set].organization.invite.success,class_name:"growl-success"}),r},function(){N.notifier({title:L[L.set].titles.error,text:L[L.set].organization.invite.error,class_name:"growl-danger"})})},loadInvites:function(){return $http.get("/api/internal/organization/invites").then(function(r){return r.data},function(err){return err})},activateStaff:function(data){return console.log(data),$http.put("/api/internal/organization/invites?activation=1",data).then(function(r){return N.notifier({title:L[L.set].titles.success,text:L[L.set].organization.activate.success,class_name:"growl-success"}),r.data})},cancelStaff:function(data){return console.log(data),$http.put("/api/internal/organization/invites?activation=0",data).then(function(r){return N.notifier({title:L[L.set].titles.success,text:L[L.set].organization.cancelActivate.success,class_name:"growl-success"}),r.data})},getMyPeople:function(options){return $http.get("/api/internal/organization/people/"+options.account_type).then(function(r){return r.data},function(err){return err})},getPersonProfile:function(options){return $http.get("/api/internal/organization/people/"+options.userId+"/staff/"+options.account_type).then(function(r){return r.data},function(err){return err})},getMyWorkForce:function(kind){return kind=kind||"employees",$http.get("/api/internal/organization/workforce?direction="+kind).then(function(r){return r.data},function(err){return err})},getLGA:function(stateId){return $http.get("/api/internal/organization/states/"+stateId+"/lga").then(function(lgas){return lgas.data},function(){})},getMedFac:function(stateId){return $http.get("/api/internal/organization/states/"+stateId+"/facility").then(function(f){return f.data},function(){})},addLgaToStaff:function(tag,staffId){return $http.put("/api/internal/organization/people/"+staffId+"/tag?"+$.param({tagType:1,tag:tag})).then(function(done){return done.data})},addToMyList:function(data){return $http.post("/api/internal/organization/staff/drugs",data).then(function(r){return N.notifier({title:"Welldone",text:"Drug added to list",class_name:"growl-success"}),r.data},function(err){return console.log(err),err})},removeMyDrug:function(drugId){return $http.delete("/api/internal/organization/staff/drugs?drugId="+drugId).then(function(){return N.notifier({title:"Welldone",text:"Drug removed from list",class_name:"growl-success"}),!0})}}}]),jQuery(window).load(function(){jQuery("#status").fadeOut(),jQuery("#preloader").delay(350).fadeOut(function(){jQuery("body").delay(350).css({overflow:"visible"})})}),jQuery(document).ready(function(){function closeVisibleSubMenu(){jQuery(".nav-parent").each(function(){var t=jQuery(this);t.hasClass("nav-active")&&t.find("> ul").slideUp(200,function(){t.removeClass("nav-active")})})}function adjustmainpanelheight(){var docHeight=jQuery(document).height();docHeight>jQuery(".mainpanel").height()&&jQuery(".mainpanel").height(docHeight)}function reposition_searchform(){jQuery(".searchform").insertBefore("relative"==jQuery(".searchform").css("position")?".leftpanelinner .userlogged":".header-right")}jQuery(".nav-parent > a").click(function(){var parent=jQuery(this).parent(),sub=parent.find("> ul");return jQuery("body").hasClass("leftpanel-collapsed")||(sub.is(":visible")?sub.slideUp(200,function(){parent.removeClass("nav-active"),jQuery(".mainpanel").css({height:""}),adjustmainpanelheight()}):(closeVisibleSubMenu(),parent.addClass("nav-active"),sub.slideDown(200,function(){adjustmainpanelheight()}))),!1}),jQuery(".tooltips").tooltip({container:"body"}),jQuery(".popovers").popover(),jQuery(".panel .panel-close").click(function(){return jQuery(this).closest(".panel").fadeOut(200),!1}),jQuery(".minimize").click(function(){var t=jQuery(this),p=t.closest(".panel");return jQuery(this).hasClass("maximize")?(p.find(".panel-body, .panel-footer").slideDown(200),t.removeClass("maximize"),t.html("&minus;")):(p.find(".panel-body, .panel-footer").slideUp(200),t.addClass("maximize"),t.html("&plus;")),!1}),jQuery(".nav-bracket > li").hover(function(){jQuery(this).addClass("nav-hover")},function(){jQuery(this).removeClass("nav-hover")}),jQuery(".menutoggle").click(function(){var body=jQuery("body"),bodypos=body.css("position");"relative"!=bodypos?body.hasClass("leftpanel-collapsed")?(body.removeClass("leftpanel-collapsed chat-view"),jQuery(".nav-bracket li.active ul").css({display:"block"}),jQuery(this).removeClass("menu-collapsed")):(body.addClass("leftpanel-collapsed"),jQuery(".nav-bracket ul").attr("style",""),jQuery(this).addClass("menu-collapsed")):(body.hasClass("leftpanel-show")?body.removeClass("leftpanel-show"):body.addClass("leftpanel-show"),adjustmainpanelheight())}),jQuery("#chatview").click(function(){var body=jQuery("body"),bodypos=body.css("position");"relative"!=bodypos?body.hasClass("chat-view")?(body.removeClass("chat-view"),jQuery(".menutoggle").hasClass("menu-collapsed")||(jQuery("body").removeClass("leftpanel-collapsed"),jQuery(".nav-bracket li.active ul").css({display:"block"}))):(body.addClass("leftpanel-collapsed chat-view"),jQuery(".nav-bracket ul").attr("style","")):body.hasClass("chat-relative-view")?body.removeClass("chat-relative-view"):(body.addClass("chat-relative-view"),body.css({left:""}))}),reposition_searchform(),jQuery(window).resize(function(){"relative"==jQuery("body").css("position")?jQuery("body").removeClass("leftpanel-collapsed chat-view"):(jQuery("body").removeClass("chat-relative-view"),jQuery("body").css({left:"",marginRight:""})),reposition_searchform()}),$(document).on("click",".toggle-UAN",function(e){e.stopPropagation()})});